// src/components.ts
import { createLiteReactElement } from "maverick.js/react";
import {
  PlayerDefinition,
  OutletDefinition,
  FullscreenButtonDefinition,
  LiveIndicatorDefinition,
  MuteButtonDefinition,
  PlayButtonDefinition,
  PosterDefinition,
  SeekButtonDefinition,
  SliderThumbnailDefinition,
  SliderValueDefinition,
  SliderVideoDefinition,
  SliderDefinition,
  TimeSliderDefinition,
  TimeDefinition,
  ToggleButtonDefinition,
  VolumeSliderDefinition
} from "vidstack";
var MediaPlayer = /* @__PURE__ */ createLiteReactElement(PlayerDefinition);
var MediaOutlet = /* @__PURE__ */ createLiteReactElement(OutletDefinition);
var MediaFullscreenButton = /* @__PURE__ */ createLiteReactElement(FullscreenButtonDefinition);
var MediaLiveIndicator = /* @__PURE__ */ createLiteReactElement(LiveIndicatorDefinition);
var MediaMuteButton = /* @__PURE__ */ createLiteReactElement(MuteButtonDefinition);
var MediaPlayButton = /* @__PURE__ */ createLiteReactElement(PlayButtonDefinition);
var MediaPoster = /* @__PURE__ */ createLiteReactElement(PosterDefinition);
var MediaSeekButton = /* @__PURE__ */ createLiteReactElement(SeekButtonDefinition);
var MediaSliderThumbnail = /* @__PURE__ */ createLiteReactElement(SliderThumbnailDefinition);
var MediaSliderValue = /* @__PURE__ */ createLiteReactElement(SliderValueDefinition);
var MediaSliderVideo = /* @__PURE__ */ createLiteReactElement(SliderVideoDefinition);
var MediaSlider = /* @__PURE__ */ createLiteReactElement(SliderDefinition);
var MediaTimeSlider = /* @__PURE__ */ createLiteReactElement(TimeSliderDefinition);
var MediaTime = /* @__PURE__ */ createLiteReactElement(TimeDefinition);
var MediaToggleButton = /* @__PURE__ */ createLiteReactElement(ToggleButtonDefinition);
var MediaVolumeSlider = /* @__PURE__ */ createLiteReactElement(VolumeSliderDefinition);

// src/use-media-player.ts
import { useReactContext } from "maverick.js/react";
import { useEffect, useState } from "react";
import { mediaContext } from "vidstack";
function useMediaPlayer() {
  const [player, setPlayer] = useState(null), context = useReactContext(mediaContext);
  if (false) {
    throw Error(
      "[vidstack] no media context was found - was this called outside of `<MediaPlayer`?"
    );
  }
  useEffect(() => {
    if (!context)
      return;
    const player2 = context.$player();
    player2.onAttach(() => void setPlayer(player2));
    return () => setPlayer(null);
  }, []);
  return player;
}

// src/use-media-provider.ts
import { effect } from "maverick.js";
import { useReactContext as useReactContext2 } from "maverick.js/react";
import { useEffect as useEffect2, useState as useState2 } from "react";
import { mediaContext as mediaContext2 } from "vidstack";
function useMediaProvider() {
  const [provider, setProvider] = useState2(null), context = useReactContext2(mediaContext2);
  if (false) {
    throw Error(
      "[vidstack] no media context was found - was this called outside of `<MediaPlayer`?"
    );
  }
  useEffect2(() => {
    if (!context)
      return;
    return effect(() => {
      setProvider(context.$provider());
    });
  }, []);
  return provider;
}

// src/use-media-remote.ts
import { peek } from "maverick.js";
import { useReactContext as useReactContext3 } from "maverick.js/react";
import { isUndefined } from "maverick.js/std";
import { useEffect as useEffect3, useMemo } from "react";
import { mediaContext as mediaContext3, MediaRemoteControl } from "vidstack";
function useMediaRemote(target) {
  const context = useReactContext3(mediaContext3), remote = useMemo(() => new MediaRemoteControl(), []);
  useEffect3(() => {
    const player = context && peek(context.$player);
    const ref = !isUndefined(target) ? target && "current" in target ? target.current : target : player;
    remote.setTarget(ref || null);
    remote.setPlayer(player || null);
  }, [target]);
  return remote;
}

// src/use-media-store.ts
import { useReactContext as useReactContext4 } from "maverick.js/react";
import { mediaContext as mediaContext4, mediaStore } from "vidstack";

// src/use-store.ts
import { effect as effect2, signal } from "maverick.js";
import { noop } from "maverick.js/std";
import { useEffect as useEffect4, useMemo as useMemo2, useRef, useState as useState3 } from "react";
function useStore(factory, ref, init) {
  const [$store, $setStore] = useState3(init), [_, update] = useState3(0), tracking = useRef({
    $props: signal([]),
    observing: /* @__PURE__ */ new Set()
  });
  useEffect4(() => {
    if (ref?.current)
      $setStore(ref.current.$store);
  }, []);
  useEffect4(() => {
    if (!$store)
      return;
    return effect2(() => {
      const props = tracking.current.$props();
      for (let i = 0; i < props.length; i++)
        $store[props[i]];
      update((n) => n + 1);
    });
  }, [$store]);
  return useMemo2(() => {
    if (!$store)
      return factory.initial;
    const { observing, $props } = tracking.current;
    return new Proxy($store, {
      get(_2, prop) {
        if (!observing.has(prop)) {
          $props.set((prev) => [...prev, prop]);
          observing.add(prop);
        }
        return $store[prop];
      },
      set: noop
    });
  }, [$store]);
}

// src/use-media-store.ts
function useMediaStore(ref) {
  const context = useReactContext4(mediaContext4);
  if (false) {
    console.warn(
      `[vidstack] \`useMediaStore\` requires \`RefObject<MediaPlayerElement>\` argument if called outside the <MediaPlayer> component`
    );
  }
  return useStore(mediaStore, ref, context?.$store);
}

// src/use-slider-store.ts
import { useReactContext as useReactContext5 } from "maverick.js/react";
import { sliderStore, sliderStoreContext } from "vidstack";
function useSliderStore(ref) {
  const $store = useReactContext5(sliderStoreContext);
  if (false) {
    console.warn(
      `[vidstack] \`useSliderStore\` requires \`RefObject<MediaSliderElement>\` argument if called outside a media slider component`
    );
  }
  return useStore(sliderStore, ref, $store);
}

// src/icon.ts
import {
  createElement,
  forwardRef
} from "react";
var Icon = /* @__PURE__ */ forwardRef((props, ref) => {
  const { width, height, size = 32, __paths, ...restProps } = props;
  return createElement("svg", {
    ...restProps,
    width: width ?? size,
    height: height ?? size,
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    "aria-hidden": "true",
    focusable: "false",
    "data-media-icon": "true",
    ref,
    dangerouslySetInnerHTML: { __html: __paths }
  });
});

// src/icons.ts
import {
  addNotePaths,
  addPlaylistPaths,
  addUserPaths,
  addPaths,
  airplayPaths,
  arrowCollapseInPaths,
  arrowCollapsePaths,
  arrowExpandOutPaths,
  arrowExpandPaths,
  arrowLeftPaths,
  bookmarkPaths,
  cameraPaths,
  chaptersPaths,
  chatCollapsePaths,
  chatPaths,
  chevronDownPaths,
  chevronRightPaths,
  chromecastPaths,
  clipPaths,
  closedCaptionsOnPaths,
  closedCaptionsPaths,
  commentPaths,
  computerPaths,
  devicePaths,
  downloadPaths,
  episodesPaths,
  eyePaths,
  fastBackwardPaths,
  fastForwardPaths,
  flagPaths,
  fullscreenArrowExitPaths,
  fullscreenArrowPaths,
  fullscreenExitPaths,
  fullscreenPaths,
  heartPaths,
  infoPaths,
  languagePaths,
  linkPaths,
  lockClosedPaths,
  lockOpenPaths,
  menuHorizontalPaths,
  menuVerticalPaths,
  microphonePaths,
  mobilePaths,
  moonPaths,
  musicOffPaths,
  musicPaths,
  mutePaths,
  nextPaths,
  notificationPaths,
  odometerPaths,
  pausePaths,
  pictureInPictureExitPaths,
  pictureInPicturePaths,
  playPaths,
  playbackSpeedCirclePaths,
  playlistPaths,
  previousPaths,
  questionMarkPaths,
  queueListPaths,
  radioButtonSelectedPaths,
  radioButtonPaths,
  repeatOnPaths,
  repeatSquareOnPaths,
  repeatSquarePaths,
  repeatPaths,
  replayPaths,
  rotatePaths,
  searchPaths,
  seekBackward10Paths,
  seekBackward15Paths,
  seekBackward30Paths,
  seekBackwardPaths,
  seekForward10Paths,
  seekForward15Paths,
  seekForward30Paths,
  seekForwardPaths,
  sendPaths,
  settingsMenuPaths,
  settingsSwitchPaths,
  settingsPaths,
  shareArrowPaths,
  sharePaths,
  shuffleOnPaths,
  shufflePaths,
  stopPaths,
  subtitlesPaths,
  sunPaths,
  theatreModeExitPaths,
  theatreModePaths,
  thumbsDownPaths,
  thumbsUpPaths,
  timerPaths,
  transcriptPaths,
  tvPaths,
  userPaths,
  volumeHighPaths,
  volumeLowPaths,
  xMarkPaths
} from "media-icons";
import { createElement as createElement2, forwardRef as forwardRef2 } from "react";
var AddNoteIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: addNotePaths });
});
var AddPlaylistIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: addPlaylistPaths });
});
var AddUserIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: addUserPaths });
});
var AddIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: addPaths });
});
var AirplayIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: airplayPaths });
});
var ArrowCollapseInIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: arrowCollapseInPaths });
});
var ArrowCollapseIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: arrowCollapsePaths });
});
var ArrowExpandOutIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: arrowExpandOutPaths });
});
var ArrowExpandIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: arrowExpandPaths });
});
var ArrowLeftIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: arrowLeftPaths });
});
var BookmarkIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: bookmarkPaths });
});
var CameraIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: cameraPaths });
});
var ChaptersIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: chaptersPaths });
});
var ChatCollapseIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: chatCollapsePaths });
});
var ChatIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: chatPaths });
});
var ChevronDownIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: chevronDownPaths });
});
var ChevronRightIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: chevronRightPaths });
});
var ChromecastIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: chromecastPaths });
});
var ClipIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: clipPaths });
});
var ClosedCaptionsOnIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: closedCaptionsOnPaths });
});
var ClosedCaptionsIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: closedCaptionsPaths });
});
var CommentIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: commentPaths });
});
var ComputerIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: computerPaths });
});
var DeviceIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: devicePaths });
});
var DownloadIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: downloadPaths });
});
var EpisodesIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: episodesPaths });
});
var EyeIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: eyePaths });
});
var FastBackwardIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: fastBackwardPaths });
});
var FastForwardIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: fastForwardPaths });
});
var FlagIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: flagPaths });
});
var FullscreenArrowExitIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: fullscreenArrowExitPaths });
});
var FullscreenArrowIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: fullscreenArrowPaths });
});
var FullscreenExitIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: fullscreenExitPaths });
});
var FullscreenIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: fullscreenPaths });
});
var HeartIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: heartPaths });
});
var InfoIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: infoPaths });
});
var LanguageIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: languagePaths });
});
var LinkIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: linkPaths });
});
var LockClosedIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: lockClosedPaths });
});
var LockOpenIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: lockOpenPaths });
});
var MenuHorizontalIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: menuHorizontalPaths });
});
var MenuVerticalIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: menuVerticalPaths });
});
var MicrophoneIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: microphonePaths });
});
var MobileIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: mobilePaths });
});
var MoonIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: moonPaths });
});
var MusicOffIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: musicOffPaths });
});
var MusicIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: musicPaths });
});
var MuteIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: mutePaths });
});
var NextIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: nextPaths });
});
var NotificationIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: notificationPaths });
});
var OdometerIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: odometerPaths });
});
var PauseIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: pausePaths });
});
var PictureInPictureExitIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: pictureInPictureExitPaths });
});
var PictureInPictureIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: pictureInPicturePaths });
});
var PlayIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: playPaths });
});
var PlaybackSpeedCircleIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: playbackSpeedCirclePaths });
});
var PlaylistIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: playlistPaths });
});
var PreviousIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: previousPaths });
});
var QuestionMarkIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: questionMarkPaths });
});
var QueueListIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: queueListPaths });
});
var RadioButtonSelectedIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: radioButtonSelectedPaths });
});
var RadioButtonIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: radioButtonPaths });
});
var RepeatOnIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: repeatOnPaths });
});
var RepeatSquareOnIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: repeatSquareOnPaths });
});
var RepeatSquareIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: repeatSquarePaths });
});
var RepeatIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: repeatPaths });
});
var ReplayIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: replayPaths });
});
var RotateIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: rotatePaths });
});
var SearchIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: searchPaths });
});
var SeekBackward10Icon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekBackward10Paths });
});
var SeekBackward15Icon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekBackward15Paths });
});
var SeekBackward30Icon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekBackward30Paths });
});
var SeekBackwardIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekBackwardPaths });
});
var SeekForward10Icon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekForward10Paths });
});
var SeekForward15Icon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekForward15Paths });
});
var SeekForward30Icon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekForward30Paths });
});
var SeekForwardIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: seekForwardPaths });
});
var SendIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: sendPaths });
});
var SettingsMenuIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: settingsMenuPaths });
});
var SettingsSwitchIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: settingsSwitchPaths });
});
var SettingsIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: settingsPaths });
});
var ShareArrowIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: shareArrowPaths });
});
var ShareIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: sharePaths });
});
var ShuffleOnIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: shuffleOnPaths });
});
var ShuffleIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: shufflePaths });
});
var StopIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: stopPaths });
});
var SubtitlesIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: subtitlesPaths });
});
var SunIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: sunPaths });
});
var TheatreModeExitIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: theatreModeExitPaths });
});
var TheatreModeIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: theatreModePaths });
});
var ThumbsDownIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: thumbsDownPaths });
});
var ThumbsUpIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: thumbsUpPaths });
});
var TimerIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: timerPaths });
});
var TranscriptIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: transcriptPaths });
});
var TvIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: tvPaths });
});
var UserIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: userPaths });
});
var VolumeHighIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: volumeHighPaths });
});
var VolumeLowIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: volumeLowPaths });
});
var XMarkIcon = /* @__PURE__ */ forwardRef2((props, ref) => {
  return createElement2(Icon, { ...props, ref, __paths: xMarkPaths });
});
export {
  AddIcon,
  AddNoteIcon,
  AddPlaylistIcon,
  AddUserIcon,
  AirplayIcon,
  ArrowCollapseIcon,
  ArrowCollapseInIcon,
  ArrowExpandIcon,
  ArrowExpandOutIcon,
  ArrowLeftIcon,
  BookmarkIcon,
  CameraIcon,
  ChaptersIcon,
  ChatCollapseIcon,
  ChatIcon,
  ChevronDownIcon,
  ChevronRightIcon,
  ChromecastIcon,
  ClipIcon,
  ClosedCaptionsIcon,
  ClosedCaptionsOnIcon,
  CommentIcon,
  ComputerIcon,
  DeviceIcon,
  DownloadIcon,
  EpisodesIcon,
  EyeIcon,
  FastBackwardIcon,
  FastForwardIcon,
  FlagIcon,
  FullscreenArrowExitIcon,
  FullscreenArrowIcon,
  FullscreenExitIcon,
  FullscreenIcon,
  HeartIcon,
  Icon,
  InfoIcon,
  LanguageIcon,
  LinkIcon,
  LockClosedIcon,
  LockOpenIcon,
  MediaFullscreenButton,
  MediaLiveIndicator,
  MediaMuteButton,
  MediaOutlet,
  MediaPlayButton,
  MediaPlayer,
  MediaPoster,
  MediaSeekButton,
  MediaSlider,
  MediaSliderThumbnail,
  MediaSliderValue,
  MediaSliderVideo,
  MediaTime,
  MediaTimeSlider,
  MediaToggleButton,
  MediaVolumeSlider,
  MenuHorizontalIcon,
  MenuVerticalIcon,
  MicrophoneIcon,
  MobileIcon,
  MoonIcon,
  MusicIcon,
  MusicOffIcon,
  MuteIcon,
  NextIcon,
  NotificationIcon,
  OdometerIcon,
  PauseIcon,
  PictureInPictureExitIcon,
  PictureInPictureIcon,
  PlayIcon,
  PlaybackSpeedCircleIcon,
  PlaylistIcon,
  PreviousIcon,
  QuestionMarkIcon,
  QueueListIcon,
  RadioButtonIcon,
  RadioButtonSelectedIcon,
  RepeatIcon,
  RepeatOnIcon,
  RepeatSquareIcon,
  RepeatSquareOnIcon,
  ReplayIcon,
  RotateIcon,
  SearchIcon,
  SeekBackward10Icon,
  SeekBackward15Icon,
  SeekBackward30Icon,
  SeekBackwardIcon,
  SeekForward10Icon,
  SeekForward15Icon,
  SeekForward30Icon,
  SeekForwardIcon,
  SendIcon,
  SettingsIcon,
  SettingsMenuIcon,
  SettingsSwitchIcon,
  ShareArrowIcon,
  ShareIcon,
  ShuffleIcon,
  ShuffleOnIcon,
  StopIcon,
  SubtitlesIcon,
  SunIcon,
  TheatreModeExitIcon,
  TheatreModeIcon,
  ThumbsDownIcon,
  ThumbsUpIcon,
  TimerIcon,
  TranscriptIcon,
  TvIcon,
  UserIcon,
  VolumeHighIcon,
  VolumeLowIcon,
  XMarkIcon,
  useMediaPlayer,
  useMediaProvider,
  useMediaRemote,
  useMediaStore,
  useSliderStore
};
