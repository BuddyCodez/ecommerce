/**
All media elements exist inside the `<media-player>` component. This component's main
responsibilities are to manage media state updates, dispatch media events, handle media
requests, and expose media state through HTML attributes and CSS properties for styling
purposes.

* @docs {@link https://www.vidstack.io/docs/react/player/components/layout/player}
* @example
*```tsx
*<MediaPlayer src="...">
*  <MediaOutlet></MediaOutlet>
*  Other components that use/manage media state here.
*</MediaPlayer>
*```
*/
export declare const MediaPlayer: import("maverick.js/react").ReactElement<import("vidstack").MediaPlayerElement>;
/**
Used to render the current provider.

* @docs {@link https://www.vidstack.io/docs/react/player/components/layout/outlet}
* @example
*```tsx
*<MediaPlayer>
*  <MediaOutlet></MediaOutlet>
*  ...
*</MediaPlayer>
*```
*/
export declare const MediaOutlet: import("maverick.js/react").ReactElement<import("vidstack").MediaOutletElement>;
/**
A button for toggling the fullscreen mode of the player.

* @docs {@link https://www.vidstack.io/docs/react/player/components/buttons/fullscreen-button}
* @example
*```tsx
*<MediaFullscreenButton></MediaFullscreenButton>
*```
*/
export declare const MediaFullscreenButton: import("maverick.js/react").ReactElement<import("vidstack").MediaFullscreenButtonElement>;
/**
This component displays the current live status of the stream. This includes whether it's
live, at the live edge, or not live. In addition, this component is a button during live streams
and will skip ahead to the live edge when pressed.

ðŸš¨ This component will contain no content, sizing, or role when the current stream is _not_ live.

* @docs {@link https://www.vidstack.io/docs/react/player/components/display/live-indicator}
* @example
*```tsx
*<MediaLiveIndicator></MediaLiveIndicator>
*```
* @example
*```tsx
*<MediaLiveIndicator>
*  <div slot="live"></div>
*  <div slot="liveEdge"></div>
*  <div slot="notLive"></div>
*</MediaLiveIndicator>
*```
*/
export declare const MediaLiveIndicator: import("maverick.js/react").ReactElement<import("vidstack").MediaLiveIndicatorElement>;
/**
A button for toggling the muted state of the player.

* @docs {@link https://www.vidstack.io/docs/react/player/components/buttons/mute-button}
* @example
*```tsx
*<MediaMuteButton></MediaMuteButton>
*```
*/
export declare const MediaMuteButton: import("maverick.js/react").ReactElement<import("vidstack").MediaMuteButtonElement>;
/**
A button for toggling the playback state (play/pause) of the current media.

* @docs {@link https://www.vidstack.io/docs/react/player/components/buttons/play-button}
* @example
*```tsx
*<MediaPlayButton></MediaPlayButton>
*```
*/
export declare const MediaPlayButton: import("maverick.js/react").ReactElement<import("vidstack").MediaPlayButtonElement>;
/**
Loads and displays the current media poster image. By default, the media provider's
loading strategy is respected meaning the poster won't load until the media can.

* @docs {@link https://www.vidstack.io/docs/react/player/components/layout/poster}
* @example
*```tsx
*<MediaPlayer>
*  <MediaPoster alt="Large alien ship hovering over New York."></MediaPoster>
*</MediaPlayer>
*```
*/
export declare const MediaPoster: import("maverick.js/react").ReactElement<import("vidstack").MediaPosterElement>;
/**
A button for seeking the current media playback forwards or backwards by a specified amount.

* @docs {@link https://www.vidstack.io/docs/react/player/components/buttons/seek-button}
* @example
*```tsx
*Forward +30s on each press.
*<MediaSeekButton seconds="+30"></MediaSeekButton>
*Backward -30s on each press.
*<MediaSeekButton seconds="-30"></MediaSeekButton>
*```
*/
export declare const MediaSeekButton: import("maverick.js/react").ReactElement<import("vidstack").MediaSeekButtonElement>;
/**
Used to load/parse WebVTT files and display preview thumbnails when the user is hovering hover
or dragging the time slider. The time ranges in the WebVTT file will automatically be matched
based on the current pointer position.

* @docs {@link https://www.vidstack.io/docs/react/player/components/sliders/slider-thumbnail}
* @example
*```tsx
*<MediaTimeSlider>
*  <MediaSliderThumbnail
*    src="https://mediaFiles.vidstack.io/thumbnails.vtt"
*    slot="preview"
*  ></MediaSliderThumbnail>
*</MediaTimeSlider>
*```
*/
export declare const MediaSliderThumbnail: import("maverick.js/react").ReactElement<import("vidstack").MediaSliderThumbnailElement>;
/**
Outputs the current slider value as text.

* @docs {@link https://www.vidstack.io/docs/react/player/components/sliders/slider-value}
* @example
*```tsx
*<MediaTimeSlider>
*  <MediaSliderValue
*    type="pointer"
*    format="time"
*    slot="preview"
*  ></MediaSliderValue>
*</MediaTimeSlider>
*```
* @example
*```tsx
*<MediaSliderValue
*  type="current"
*></MediaSliderValue>
*```
* @example
*```tsx
*<MediaSliderValue
*  format="time"
*  showHours
*  padHours
*></MediaSliderValue>
*```
* @example
*```tsx
*<MediaSliderValue
*  format="percent"
*  decimalPlaces={2}
*></MediaSliderValue>
*```
*/
export declare const MediaSliderValue: import("maverick.js/react").ReactElement<import("vidstack").MediaSliderValueElement>;
/**
Used to load a low-resolution video to be displayed when the user is hovering over or dragging
the time slider. The preview video will automatically be updated to be in-sync with the current
preview position, so ensure it has the same length as the original media (i.e., same duration).

* @docs {@link https://www.vidstack.io/docs/react/player/components/sliders/slider-video}
* @example
*```tsx
*<MediaTimeSlider>
*  <MediaSliderVideo src="/lowRes-video.mp4" slot="preview"></MediaSliderVideo>
*</MediaTimeSlider>
*```
*/
export declare const MediaSliderVideo: import("maverick.js/react").ReactElement<import("vidstack").MediaSliderVideoElement>;
/**
A custom-built range input that is cross-browser friendly, ARIA friendly, mouse/touch-friendly
and easily style-able. The slider allows users to input numeric values between a minimum and
maximum value.

* @docs {@link https://www.vidstack.io/docs/react/player/components/sliders/slider}
* @example
*```tsx
*<MediaSlider min={0} max={100} value={50} ariaLabel="..."></MediaSlider>
*```
*/
export declare const MediaSlider: import("maverick.js/react").ReactElement<import("vidstack").MediaSliderElement>;
/**
A slider control that lets the user specify their desired time level.

* @docs {@link https://www.vidstack.io/docs/react/player/components/sliders/time-slider}
* @example
*```tsx
*<MediaTimeSlider></MediaTimeSlider>
*```
* @example
*```tsx
*<MediaTimeSlider>
*  <MediaSliderValue
*    type="pointer"
*    format="time"
*    slot="preview"
*  ></MediaSliderValue>
*</MediaTimeSlider>
*```
*/
export declare const MediaTimeSlider: import("maverick.js/react").ReactElement<import("vidstack").MediaTimeSliderElement>;
/**
Outputs a media duration (eg: `currentTime`, `duration`, `bufferedAmount`, etc.) value as time
formatted text.

* @docs {@link https://www.vidstack.io/docs/react/player/components/display/time}
* @example
*```tsx
*<MediaTime type="current"></MediaTime>
*```
* @example
*```tsx
*Remaining time.
*<MediaTime type="current" remainder></MediaTime>
*```
*/
export declare const MediaTime: import("maverick.js/react").ReactElement<import("vidstack").MediaTimeElement>;
/**
A toggle button is a two-state button that can be either off (not pressed) or on (pressed).

* @docs {@link https://www.vidstack.io/docs/react/player/components/buttons/toggle-button}
* @example
*```tsx
*<MediaToggleButton ariaLabel="...">
*  <svg slot="on">...</svg>
*  <svg slot="off">...</svg>
*</MediaToggleButton>
*```
*/
export declare const MediaToggleButton: import("maverick.js/react").ReactElement<import("vidstack").MediaToggleButtonElement>;
/**
A slider control that lets the user specify their desired volume level.

* @docs {@link https://www.vidstack.io/docs/react/player/components/sliders/volume-slider}
* @example
*```tsx
*<MediaVolumeSlider></MediaVolumeSlider>
*```
* @example
*```tsx
*<MediaVolumeSlider>
*  <MediaSliderValue
*    type="pointer"
*    format="percent"
*  ></MediaSliderValue>
*</MediaVolumeSlider>
*```
*/
export declare const MediaVolumeSlider: import("maverick.js/react").ReactElement<import("vidstack").MediaVolumeSliderElement>;
